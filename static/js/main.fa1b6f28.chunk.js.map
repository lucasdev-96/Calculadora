{"version":3,"sources":["components/Hero.jsx","App.js","reportWebVitals.js","index.js"],"names":["Hero","useState","num1","num2","num","setNum","result","setResult","operators","setOperators","handleNumber","target","name","value","Number","className","placeholder","type","onChange","onClick","arithmeticOperation","a","b","operator","calculator","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kQAmDeA,MAhDf,WACE,MAAsBC,mBAAS,CAAEC,KAAM,GAAIC,KAAM,KAAjD,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA4BJ,mBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAkCN,mBAAS,IAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEQP,EAAeE,EAAfF,KAAMC,EAASC,EAATD,KAaRO,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtCR,EAAO,2BACFD,GADC,kBAEHQ,EAAOE,OAAOD,OAInB,OACE,qBAAKE,UAAU,kBAAf,SACE,iCACE,qBAAKA,UAAU,SAAf,SAA2BP,EAA8DF,EAAlD,wDACvC,sBAAKS,UAAU,UAAf,UACE,uBAAOC,YAAY,IAAIC,KAAK,OAAOL,KAAK,OAAOM,SAAUR,EAAcG,MAAOX,IAC9E,uBAAOc,YAAY,IAAIC,KAAK,OAAOL,KAAK,OAAOM,SAAUR,EAAcG,MAAOV,OAEhF,sBAAKY,UAAU,YAAf,UACE,wBAAQI,QAAS,kBAAMV,EAAa,MAAMQ,KAAK,SAA/C,eACA,wBAAQE,QAAS,kBAAMV,EAAa,MAAMQ,KAAK,SAA/C,eACA,wBAAQE,QAAS,kBAAMV,EAAa,MAAMQ,KAAK,SAA/C,eACA,wBAAQE,QAAS,kBAAMV,EAAa,MAAMQ,KAAK,SAA/C,kBAEF,sBAAKF,UAAU,OAAf,UACE,wBAAQE,KAAK,SAASE,QAAS,kBAjCpB,WAA6B,IAC1CC,EADcC,EAA2B,uDAAvB,EAAGC,EAAoB,uDAAhB,EAAGC,EAAa,uCAG5B,MAAbA,IAAkBH,EAAsBC,EAAIC,GAC/B,MAAbC,IAAkBH,EAAsBC,EAAIC,GAC/B,MAAbC,IAAkBH,EAAsBC,EAAIC,GAC/B,MAAbC,IAAkBH,EAAsBC,EAAIC,GAEhDf,EAAUa,GAyBiCI,CAAWtB,EAAMC,EAAMK,IAA5D,uBACA,wBAAQS,KAAK,SAASE,QAAS,kBAAMZ,EAAU,IAA/C,6B,MClCKkB,MANf,WACE,OACE,cAAC,EAAD,KCQWC,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fa1b6f28.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport '../styles/calculadora.css';\n\nfunction Hero() {\n  const [num, setNum] = useState({ num1: '', num2: '' });\n  const [result, setResult] = useState(0);\n  const [operators, setOperators] = useState('');\n  // const [renderResult, setRenderResult] = useState(false);\n  const { num1, num2 } = num;\n\n  const calculator = (a = 0, b = 0, operator) => {\n    let arithmeticOperation;\n\n    if (operator === '+') arithmeticOperation = a + b;\n    if (operator === '-') arithmeticOperation = a - b;\n    if (operator === '*') arithmeticOperation = a * b;\n    if (operator === '/') arithmeticOperation = a / b;\n\n    setResult(arithmeticOperation);\n  };\n\n  const handleNumber = ({ target: { name, value } }) => {\n    setNum({\n      ...num,\n      [name]: Number(value),\n    });\n  };\n\n  return (\n    <div className=\"calculator_main\">\n      <main>\n        <div className=\"result\">{ !operators ? 'Adicione dois números e o operador aritmético' : result}</div>\n        <div className=\"Numbers\">\n          <input placeholder=\"0\" type=\"text\" name=\"num1\" onChange={handleNumber} value={num1} />\n          <input placeholder=\"0\" type=\"text\" name=\"num2\" onChange={handleNumber} value={num2} />\n        </div>\n        <div className=\"operators\">\n          <button onClick={() => setOperators('+')} type=\"button\">+</button>\n          <button onClick={() => setOperators('-')} type=\"button\">-</button>\n          <button onClick={() => setOperators('*')} type=\"button\">*</button>\n          <button onClick={() => setOperators('+')} type=\"button\">/</button>\n        </div>\n        <div className=\"btns\">\n          <button type=\"button\" onClick={() => calculator(num1, num2, operators)}>resultado</button>\n          <button type=\"button\" onClick={() => setResult(0)}>Limpar</button>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default Hero;\n","import React from 'react';\nimport Hero from './components/Hero';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Hero />\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}